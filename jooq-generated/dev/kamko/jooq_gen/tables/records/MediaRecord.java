/*
 * This file is generated by jOOQ.
 */
package dev.kamko.jooq_gen.tables.records;


import dev.kamko.jooq_gen.tables.Media;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MediaRecord extends UpdatableRecordImpl<MediaRecord> implements Record4<Long, String, String, String> {

    private static final long serialVersionUID = -539902354;

    /**
     * Setter for <code>public.media.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.media.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.media.url</code>.
     */
    public void setUrl(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.media.url</code>.
     */
    public String getUrl() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.media.caption</code>.
     */
    public void setCaption(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.media.caption</code>.
     */
    public String getCaption() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.media.media_type</code>.
     */
    public void setMediaType(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.media.media_type</code>.
     */
    public String getMediaType() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Media.MEDIA.ID;
    }

    @Override
    public Field<String> field2() {
        return Media.MEDIA.URL;
    }

    @Override
    public Field<String> field3() {
        return Media.MEDIA.CAPTION;
    }

    @Override
    public Field<String> field4() {
        return Media.MEDIA.MEDIA_TYPE;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getUrl();
    }

    @Override
    public String component3() {
        return getCaption();
    }

    @Override
    public String component4() {
        return getMediaType();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getUrl();
    }

    @Override
    public String value3() {
        return getCaption();
    }

    @Override
    public String value4() {
        return getMediaType();
    }

    @Override
    public MediaRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public MediaRecord value2(String value) {
        setUrl(value);
        return this;
    }

    @Override
    public MediaRecord value3(String value) {
        setCaption(value);
        return this;
    }

    @Override
    public MediaRecord value4(String value) {
        setMediaType(value);
        return this;
    }

    @Override
    public MediaRecord values(Long value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MediaRecord
     */
    public MediaRecord() {
        super(Media.MEDIA);
    }

    /**
     * Create a detached, initialised MediaRecord
     */
    public MediaRecord(Long id, String url, String caption, String mediaType) {
        super(Media.MEDIA);

        set(0, id);
        set(1, url);
        set(2, caption);
        set(3, mediaType);
    }
}
